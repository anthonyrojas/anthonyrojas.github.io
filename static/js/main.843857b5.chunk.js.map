{"version":3,"sources":["Components/Loading/Loading.js","Components/Header/Header.js","Components/Navbar/Navbar.js","Components/Footer/Footer.js","Components/NoMatch/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Loading","props","a","createElement","className","Header","react_default","id","Navbar","state","navVisibility","e","this","setState","Object","objectSpread","window","scrollTo","top","behavior","toggleNav","Fragment","react_transition_group","in","timeout","classNames","unmountOnExit","Link","to","onClick","clickNavLink","bind","Component","Footer","href","target","rel","NoMatch","_ref","location","AboutContainer","lazy","Promise","all","then","EducationContainer","WorkContainer","ProjectsContainer","App","Components_Header_Header","BrowserRouter","Components_Navbar_Navbar","Suspense","fallback","Switch","Route","exact","path","component","Components_Footer_Footer","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.843857b5.chunk.js","sourcesContent":["import React from 'react';\nimport './Loading.css';\nconst Loading = (props) => (\n    <div className='loading-page'>\n        <div className=\"cssload-thecube\">\n            <div className=\"cssload-cube cssload-c1\"></div>\n            <div className=\"cssload-cube cssload-c2\"></div>\n            <div className=\"cssload-cube cssload-c4\"></div>\n            <div className=\"cssload-cube cssload-c3\"></div>\n        </div>\n    </div>\n);\nexport default Loading;","import React from 'react';\nimport './Header.css';\nconst Header = (props)=>(\n    <header className='Header'>\n        <div className='header-overlay'>\n            <h1 id='header-name'>Anthony Rojas</h1>\n            <h3 id='header-caption'>Software Developer, Web Developer, Javascript Programmer.</h3>\n        </div>\n    </header>\n);\nexport default Header;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navbar.css';\nimport {CSSTransition} from 'react-transition-group';\nclass Navbar extends Component{\n    state={\n        navVisibility: false\n    }\n    toggleNav(e){\n        this.setState({\n            ...this.state,\n            navVisibility: !this.state.navVisibility\n        });\n    }\n    clickNavLink(e){\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n        this.toggleNav(e);\n    }\n    render(){\n        return(\n            <React.Fragment>\n                <CSSTransition in={this.state.navVisibility} timeout={750} classNames='nav-slide' unmountOnExit>\n                    <nav>\n                        <ul>\n                            <li><Link className='nav-link' to='/' onClick={this.clickNavLink.bind(this)}>About</Link></li>\n                            <li><Link className='nav-link' to='/education' onClick={this.clickNavLink.bind(this)}>Education</Link></li>\n                            <li><Link className='nav-link' to='/projects' onClick={this.clickNavLink.bind(this)}>Projects</Link></li>\n                            <li><Link className='nav-link' to='/work' onClick={this.clickNavLink.bind(this)}>Work</Link></li>\n                        </ul>\n                    </nav>\n                </CSSTransition>\n                <button className='nav-btn ripple-nav-btn' onClick={this.toggleNav.bind(this)}><i className='fas fa-bars'></i></button>\n            </React.Fragment>\n        );\n    }\n}\nexport default Navbar;","import React from 'react';\nimport './Footer.css';\nconst Footer = (props) =>(\n    <footer>\n        <div className='row'>\n            <div className='col-10 col-md-3 flex-center'>\n                <a href='https://github.com/anthonyrojas?tab=repositories' target='_blank' rel='noopener noreferrer' className='footer-link'>\n                    <i className='fab fa-github fa-4x'></i>\n                </a>\n            </div>\n            <div className='col-10 col-md-4 flex-center'>\n                <a href='mailto:anthony.rojas095@gmail.com' className='footer-link'>\n                    <i className='far fa-envelope fa-4x'></i>\n                </a>\n            </div>\n            <div className='col-10 col-md-3 flex-center'>\n                <a href='https://www.linkedin.com/in/anthony-rojas-09/' target='_blank' rel='noopener noreferrer' className='footer-link'>\n                    <i className='fab fa-linkedin fa-4x'></i>\n                </a>\n            </div>\n        </div>\n    </footer>\n);\nexport default Footer;","import React from 'react';\nconst NoMatch = ({location})=>(\n    <div className='error-page-display'>\n        <p>Oops ...page not found!</p>\n    </div>\n);\nexport default NoMatch;","import React, { Component, lazy } from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Navbar from './Components/Navbar/Navbar';\nimport {Route, Switch, BrowserRouter as Router} from 'react-router-dom';\nimport Footer from './Components/Footer/Footer';\nimport NoMatch from './Components/NoMatch/NoMatch';\n// import AboutContainer from './Components/About/AboutContainer';\n// import ProjectsContainer from './Components/Projects/ProjectsContainer';\n// import WorkContainer from './Components/Work/WorkContainer';\n// import EducationContainer from './Components/Education/EducationContainer';\nimport Loading from './Components/Loading/Loading';\nconst AboutContainer = lazy(()=>import('./Components/About/AboutContainer'));\nconst EducationContainer = lazy(()=>import('./Components/Education/EducationContainer'));\nconst WorkContainer = lazy(()=>import('./Components/Work/WorkContainer'));\nconst ProjectsContainer = lazy(()=>import('./Components/Projects/ProjectsContainer'));\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Router>\n            <React.Fragment>\n              <Navbar/>\n              <main>\n              <React.Suspense fallback={<Loading />}>\n                <Switch>\n                  <Route exact path='/'><AboutContainer /></Route>\n                  <Route path='/education'><EducationContainer/></Route>\n                  <Route path='/work'><WorkContainer/></Route>\n                  <Route path='/projects'><ProjectsContainer /></Route>\n                  <Route component={NoMatch} />\n                </Switch>\n              </React.Suspense>\n              </main>\n            </React.Fragment>\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}